<?xml version='1.0' encoding='UTF-8'?>
<root>
 <tabbed_widget name="Main Window" parent="main_window">
  <Tab containers="1" tab_name="Yaw analysis">
   <Container>
    <DockSplitter sizes="1" count="1" orientation="-">
     <DockSplitter sizes="0.5;0.5" count="2" orientation="|">
      <DockSplitter sizes="0.5;0.5" count="2" orientation="-">
       <DockArea name="Yaw rates">
        <plot flip_y="false" flip_x="false" mode="TimeSeries" style="Lines">
         <range left="1730302970.673761" bottom="-0.310926" top="0.432922" right="1730302975.677490"/>
         <limitY/>
         <curve name="/imu/data/angular_velocity/z" color="#1f77b4"/>
         <curve name="/zoe/localization/raw_global/twist/twist/angular/z" color="#d62728"/>
         <curve name="/zoe/localization/raw_global/pose/covariance/[0;4]" color="#1ac938"/>
         <curve name="/zoe/localization/global/twist/twist/angular/z" color="#ff7f0e"/>
        </plot>
       </DockArea>
       <DockArea name="Yaw">
        <plot flip_y="false" flip_x="false" mode="TimeSeries" style="Lines">
         <range left="1730302970.694767" bottom="2942.678673" top="3351.962519" right="1730302975.677490"/>
         <limitY/>
         <curve name="Unwrapped KF yaw" color="#ff8900"/>
         <curve name="Unwrapped GPS heading" color="#17becf"/>
         <curve name="Unwrapped Heading from GPS positions" color="#1ac938"/>
        </plot>
       </DockArea>
      </DockSplitter>
      <DockSplitter sizes="0.333712;0.332577;0.333712" count="3" orientation="-">
       <DockArea name="GT diff yaw">
        <plot flip_y="false" flip_x="false" mode="TimeSeries" style="LinesAndDots">
         <range left="1730302970.694767" bottom="-3.770314" top="3.643291" right="1730302975.677367"/>
         <limitY/>
         <curve name="yaw gt diff" color="#1ac938"/>
        </plot>
       </DockArea>
       <DockArea name="GT diff X">
        <plot flip_y="false" flip_x="false" mode="TimeSeries" style="LinesAndDots">
         <range left="1730302970.694767" bottom="-0.192405" top="0.240242" right="1730302975.677367"/>
         <limitY/>
         <curve name="X gt diff" color="#ff7f0e"/>
        </plot>
       </DockArea>
       <DockArea name="GT diff Y">
        <plot flip_y="false" flip_x="false" mode="TimeSeries" style="LinesAndDots">
         <range left="1730302970.694767" bottom="-0.137193" top="0.653772" right="1730302975.677367"/>
         <limitY/>
         <curve name="Y gt diff" color="#f14cc1"/>
        </plot>
       </DockArea>
      </DockSplitter>
     </DockSplitter>
    </DockSplitter>
   </Container>
  </Tab>
  <Tab containers="1" tab_name="Position">
   <Container>
    <DockSplitter sizes="1" count="1" orientation="-">
     <DockSplitter sizes="0.5;0.5" count="2" orientation="|">
      <DockArea name="UTM">
       <plot flip_y="false" flip_x="false" mode="XYPlot" style="LinesAndDots">
        <range left="458947.848766" bottom="4462508.391264" top="4462526.839685" right="458960.962422"/>
        <limitY/>
        <curve name="/zoe/localization/global/pose/pose/position/[x;y]" curve_x="/zoe/localization/global/pose/pose/position/x" curve_y="/zoe/localization/global/pose/pose/position/y" color="#ff9700"/>
        <curve name="/zoe/localization/raw_global/pose/pose/position/[x;y]" curve_x="/zoe/localization/raw_global/pose/pose/position/x" curve_y="/zoe/localization/raw_global/pose/pose/position/y" color="#00ff33"/>
       </plot>
      </DockArea>
      <DockSplitter sizes="0.5;0.5" count="2" orientation="-">
       <DockArea name="...">
        <plot flip_y="false" flip_x="false" mode="TimeSeries" style="Lines">
         <range left="1730302970.694767" bottom="0.047236" top="0.097181" right="1730302975.677367"/>
         <limitY/>
         <curve name="Delta KF distance" color="#f14cc1"/>
        </plot>
       </DockArea>
       <DockArea name="...">
        <plot flip_y="false" flip_x="false" mode="TimeSeries" style="Lines">
         <range left="0.000000" bottom="0.000000" top="1.000000" right="1.000000"/>
         <limitY/>
        </plot>
       </DockArea>
      </DockSplitter>
     </DockSplitter>
    </DockSplitter>
   </Container>
  </Tab>
  <Tab containers="1" tab_name="Time">
   <Container>
    <DockSplitter sizes="1" count="1" orientation="-">
     <DockArea name="...">
      <plot flip_y="false" flip_x="false" mode="TimeSeries" style="Lines">
       <range left="1730302970.611025" bottom="0.097500" top="0.202500" right="1730302975.628431"/>
       <limitY/>
       <curve name="Delta t ublox_fix" color="#00d0ff"/>
       <curve name="Delta t ublox_lite_fix" color="#ff7a00"/>
      </plot>
     </DockArea>
    </DockSplitter>
   </Container>
  </Tab>
  <currentTabIndex index="0"/>
 </tabbed_widget>
 <use_relative_time_offset enabled="0"/>
 <!-- - - - - - - - - - - - - - - -->
 <!-- - - - - - - - - - - - - - - -->
 <Plugins>
  <plugin ID="DataLoad CSV">
   <parameters delimiter="0" time_axis=""/>
  </plugin>
  <plugin ID="DataLoad MCAP"/>
  <plugin ID="DataLoad ROS2 bags">
   <use_header_stamp value="false"/>
   <discard_large_arrays value="true"/>
   <max_array_size value="100"/>
   <boolean_strings_to_number value="true"/>
   <remove_suffix_from_strings value="true"/>
   <selected_topics value=""/>
  </plugin>
  <plugin ID="DataLoad ULog"/>
  <plugin ID="MQTT Subscriber (Mosquitto)"/>
  <plugin ID="ROS2 Topic Subscriber">
   <use_header_stamp value="false"/>
   <discard_large_arrays value="true"/>
   <max_array_size value="500"/>
   <boolean_strings_to_number value="true"/>
   <remove_suffix_from_strings value="true"/>
   <selected_topics value="/imu/data;/simpleRTK2B/ublox_gps_node/fix;/simpleRTK2BLite/ublox_gps_node/fix;/zoe/localization/global;/zoe/localization/raw_global"/>
  </plugin>
  <plugin ID="UDP Server"/>
  <plugin ID="WebSocket Server"/>
  <plugin ID="ZMQ Subscriber"/>
  <plugin ID="Fast Fourier Transform"/>
  <plugin ID="Quaternion to RPY"/>
  <plugin ID="Reactive Script Editor">
   <library code="--[[ Helper function to create a series from arrays&#xa;&#xa; new_series: a series previously created with ScatterXY.new(name)&#xa; prefix:     prefix of the timeseries, before the index of the array&#xa; suffix_X:   suffix to complete the name of the series containing the X value. If [nil], use the index of the array.&#xa; suffix_Y:   suffix to complete the name of the series containing the Y value&#xa; timestamp:   usually the tracker_time variable&#xa;              &#xa; Example:&#xa; &#xa; Assuming we have multiple series in the form:&#xa; &#xa;   /trajectory/node.{X}/position/x&#xa;   /trajectory/node.{X}/position/y&#xa;   &#xa; where {N} is the index of the array (integer). We can create a reactive series from the array with:&#xa; &#xa;   new_series = ScatterXY.new(&quot;my_trajectory&quot;) &#xa;   CreateSeriesFromArray( new_series, &quot;/trajectory/node&quot;, &quot;position/x&quot;, &quot;position/y&quot;, tracker_time );&#xa;--]]&#xa;&#xa;function CreateSeriesFromArray( new_series, prefix, suffix_X, suffix_Y, timestamp )&#xa;  &#xa;  --- clear previous values&#xa;  new_series:clear()&#xa;  &#xa;  --- Append points to new_series&#xa;  index = 0&#xa;  while(true) do&#xa;&#xa;    x = index;&#xa;    -- if not nil, get the X coordinate from a series&#xa;    if suffix_X ~= nil then &#xa;      series_x = TimeseriesView.find( string.format( &quot;%s.%d/%s&quot;, prefix, index, suffix_X) )&#xa;      if series_x == nil then break end&#xa;      x = series_x:atTime(timestamp)&#x9; &#xa;    end&#xa;    &#xa;    series_y = TimeseriesView.find( string.format( &quot;%s.%d/%s&quot;, prefix, index, suffix_Y) )&#xa;    if series_y == nil then break end &#xa;    y = series_y:atTime(timestamp)&#xa;    &#xa;    new_series:push_back(x,y)&#xa;    index = index+1&#xa;  end&#xa;end&#xa;&#xa;--[[ Similar to the built-in function GetSeriesNames(), but select only the names with a give prefix. --]]&#xa;&#xa;function GetSeriesNamesByPrefix(prefix)&#xa;  -- GetSeriesNames(9 is a built-in function&#xa;  all_names = GetSeriesNames()&#xa;  filtered_names = {}&#xa;  for i, name in ipairs(all_names)  do&#xa;    -- check the prefix&#xa;    if name:find(prefix, 1, #prefix) then&#xa;      table.insert(filtered_names, name);&#xa;    end&#xa;  end&#xa;  return filtered_names&#xa;end&#xa;&#xa;--[[ Modify an existing series, applying offsets to all their X and Y values&#xa;&#xa; series: an existing timeseries, obtained with TimeseriesView.find(name)&#xa; delta_x: offset to apply to each x value&#xa; delta_y: offset to apply to each y value &#xa;  &#xa;--]]&#xa;&#xa;function ApplyOffsetInPlace(series, delta_x, delta_y)&#xa;  -- use C++ indeces, not Lua indeces&#xa;  for index=0, series:size()-1 do&#xa;    x,y = series:at(index)&#xa;    series:set(index, x + delta_x, y + delta_y)&#xa;  end&#xa;end&#xa;"/>
   <scripts/>
  </plugin>
  <plugin ID="CSV Exporter"/>
  <plugin ID="ROS2 Topic Re-Publisher"/>
 </Plugins>
 <!-- - - - - - - - - - - - - - - -->
 <previouslyLoaded_Datafiles/>
 <previouslyLoaded_Streamer name="ROS2 Topic Subscriber"/>
 <!-- - - - - - - - - - - - - - - -->
 <customMathEquations>
  <snippet name="Unwrapped KF yaw">
   <global>prev_yaw = 0
init = false</global>
   <function>if (not init)
then
  prev_yaw = value
  init = true
  return value
end

unwraped = value
while ( (unwraped-prev_yaw) > 180.0 )
do
  unwraped = unwraped - 360.0
end

while ( (unwraped-prev_yaw) &lt; -180.0 ) 
do 
  unwraped = unwraped + 360.0 
end

prev_yaw = unwraped

return (unwraped)</function>
   <linked_source>/zoe/localization/global/pose/pose/orientation/z</linked_source>
  </snippet>
  <snippet name="X gt diff">
   <global></global>
   <function>return (value-v1)</function>
   <linked_source>/zoe/localization/global/pose/pose/position/x</linked_source>
   <additional_sources>
    <v1>/zoe/localization/raw_global/pose/pose/position/x</v1>
   </additional_sources>
  </snippet>
  <snippet name="Delta KF distance">
   <global>prev_time = 0
init = false</global>
   <function>if (not init)
then
  prev_x = value
  prev_y = v1
  init = true
  return 0
end

d = math.sqrt( (value-prev_x)^2 + (v1-prev_y)^2)
prev_x = value
prev_y = v1
return (d)</function>
   <linked_source>/zoe/localization/global/pose/pose/position/x</linked_source>
   <additional_sources>
    <v1>/zoe/localization/global/pose/pose/position/y</v1>
   </additional_sources>
  </snippet>
  <snippet name="Unwrapped GPS heading">
   <global>prev_yaw = 0
init = false</global>
   <function>if (not init)
then
  prev_yaw = value
  init = true
  return value
end

unwraped = value
while ( (unwraped-prev_yaw) > 180.0 )
do
  unwraped = unwraped - 360.0
end

while ( (unwraped-prev_yaw) &lt; -180.0 ) 
do 
  unwraped = unwraped + 360.0 
end

prev_yaw = unwraped

return (unwraped)</function>
   <linked_source>/zoe/localization/raw_global/pose/pose/orientation/z</linked_source>
  </snippet>
  <snippet name="Y gt diff">
   <global></global>
   <function>return (value-v1)</function>
   <linked_source>/zoe/localization/global/pose/pose/position/y</linked_source>
   <additional_sources>
    <v1>/zoe/localization/raw_global/pose/pose/position/y</v1>
   </additional_sources>
  </snippet>
  <snippet name="yaw gt diff">
   <global></global>
   <function>unwraped = value-v1
while ( unwraped > 180.0 )
do
  unwraped = unwraped - 360.0
end

while ( unwraped &lt; -180.0 ) 
do 
  unwraped = unwraped + 360.0 
end
return (unwraped)</function>
   <linked_source>/zoe/localization/global/pose/pose/orientation/z</linked_source>
   <additional_sources>
    <v1>/zoe/localization/raw_global/pose/pose/orientation/z</v1>
   </additional_sources>
  </snippet>
  <snippet name="Unwrapped Heading from GPS positions">
   <global>prev_yaw = 0
init = false</global>
   <function>if (not init)
then
  prev_yaw = value
  init = true
  return value
end

unwraped = value
while ( (unwraped-prev_yaw) > 180.0 )
do
  unwraped = unwraped - 360.0
end

while ( (unwraped-prev_yaw) &lt; -180.0 ) 
do 
  unwraped = unwraped + 360.0 
end

prev_yaw = unwraped

return (unwraped)</function>
   <linked_source>/zoe/localization/raw_global/pose/covariance/[0;5]</linked_source>
  </snippet>
  <snippet name="Delta t ublox_fix">
   <global>prev_time = 0
init = false</global>
   <function>if (not init)
then
  prev_time = value + v1*1e-9
  init = true
  return value
end

current_time = value + v1*1e-9
dt = current_time - prev_time
prev_time = current_time
return (dt)</function>
   <linked_source>/simpleRTK2B/ublox_gps_node/fix/header/stamp/sec</linked_source>
   <additional_sources>
    <v1>/simpleRTK2B/ublox_gps_node/fix/header/stamp/nanosec</v1>
   </additional_sources>
  </snippet>
  <snippet name="Delta t ublox_lite_fix">
   <global>prev_time = 0
init = false</global>
   <function>if (not init)
then
  prev_time = value + v1*1e-9
  init = true
  return value
end

current_time = value + v1*1e-9
dt = current_time - prev_time
prev_time = current_time
return (dt)</function>
   <linked_source>/simpleRTK2BLite/ublox_gps_node/fix/header/stamp/sec</linked_source>
   <additional_sources>
    <v1>/simpleRTK2BLite/ublox_gps_node/fix/header/stamp/nanosec</v1>
   </additional_sources>
  </snippet>
 </customMathEquations>
 <snippets/>
 <!-- - - - - - - - - - - - - - - -->
</root>

